From 2669bc3c520f3c5f7ec3747802ea07bdd35885a2 Mon Sep 17 00:00:00 2001
From: linnj <linnj@xilinx.com>
Date: Wed, 20 Oct 2021 16:02:14 -0600
Subject: [PATCH] adding trusted app test

This specific test is using the hello world example.
---
 cmd/Makefile |  1 +
 cmd/tatest.c | 79 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 80 insertions(+)
 create mode 100644 cmd/tatest.c

diff --git a/cmd/Makefile b/cmd/Makefile
index dd86675bf2..2e9d2909eb 100644
--- a/cmd/Makefile
+++ b/cmd/Makefile
@@ -10,6 +10,7 @@ obj-$(CONFIG_CMD_BOOTM) += bootm.o
 obj-y += help.o
 obj-y += panic.o
 obj-y += version.o
+obj-y += tatest.o
 
 # command
 obj-$(CONFIG_CMD_ACPI) += acpi.o
diff --git a/cmd/tatest.c b/cmd/tatest.c
new file mode 100644
index 0000000000..a9f26739bd
--- /dev/null
+++ b/cmd/tatest.c
@@ -0,0 +1,79 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2000-2009
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ */
+
+#include <common.h>
+#include <command.h>
+#include <tee.h>
+static struct udevice *tee;
+static u32 session;
+
+#define TA_HELLO_WORLD_UUID \
+        { 0x8aaaf200, 0x2450, 0x11e4, \
+                { 0xab, 0xe2, 0x00, 0x02, 0xa5, 0xd5, 0xc5, 0x1b} }
+
+static int ta_open_session(void)
+{
+	const struct tee_optee_ta_uuid uuid = TA_HELLO_WORLD_UUID;
+	struct tee_open_session_arg arg;
+	int rc;
+
+	tee = tee_find_device(tee, NULL, NULL, NULL);
+	if (!tee)
+		return -ENODEV;
+
+	memset(&arg, 0, sizeof(arg));
+	tee_optee_ta_uuid_to_octets(arg.uuid, &uuid);
+	rc = tee_open_session(tee, &arg, 0, NULL);
+	if (!rc)
+		session = arg.session;
+	return 0;
+}
+#if 0
+static int do_tatest(struct cmd_tbl *cmdtp, int flag, int argc,
+		      char *const argv[])
+{
+
+	printf("Running TA\n");
+	ta_open_session();
+	tee_close_session(tee, session);
+	return 0;
+}
+#endif
+
+#define TA_HELLO_WORLD_CMD_INC_VALUE            0
+
+static int do_tatest(struct cmd_tbl *cmdtp, int flag, int argc,
+		      char *const argv[])
+{
+	struct tee_param param[2];
+	struct tee_invoke_arg arg;
+
+	printf("Running TA\n");
+	ta_open_session();
+
+	memset(&arg, 0, sizeof(arg));
+	arg.func = TA_HELLO_WORLD_CMD_INC_VALUE;
+	arg.session = session;
+
+	memset(param, 0, sizeof(param));
+	param[0].attr = TEE_PARAM_ATTR_TYPE_VALUE_INOUT;
+	param[0].u.value.a = 1;
+
+	printf("TA value: %d\n", (int)param[0].u.value.a);
+
+	tee_invoke_func(tee, &arg, 1, param);
+
+	printf("TA value: %d\n", (int)param[0].u.value.a);
+
+	tee_close_session(tee, session);
+	return 0;
+}
+
+U_BOOT_CMD(
+	tatest,	1,		1,	do_tatest,
+	"Run an OP-TEE TA",
+	""
+);
-- 
2.17.1

